It is possible to insert own code inside the firmware, there are no checksums/signatures/... However code at the end of part2 will not get executed due to unknown reasons (some memory-management-unit-stuff??).

For my tests i patched the printf-call at 0x58a8a and put my own code based on block2_inserted.asm inside the strings-part of the firmware at 0x551a4. Than you can trigger it by tipping "ver" inside the serial console.

The code was created with `./nds32le-linux-as -mpic -mbaseline=v2 test.asm -o test.elf && ./nds32le-linux-objcopy -O binary test.elf test.bin && ./nds32le-linux-objdump -d test.elf` and then copied into the firmware using a hex editor. This should be automated as it is prone to errors.

Inside the code $gp is set to zero to make the code work. You could also NOP out the add-instruction with this register manually after assembling.

HIGHLY EXPERIMENTAL. NO WARRANTY. DO NOT MESS WITH THIS UNLESS YOU HAVE A WAY TO REFLASH THE MEMORY-CHIP EXTERNALLY! (also see flashrom.txt)
